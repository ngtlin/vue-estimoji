# This is a basic workflow that is manually triggered
name: Create Release Branch

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      version:
        # Friendly description to be shown in the UI instead of 'version'
        description: 'Version  (e.g. 1.8.8)'
        # Input has to be provided for the workflow to run
        required: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  createrelease:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout latest code
        uses: actions/checkout@v2
        
      – name: Create release branch
        run: git checkout -b release/v${{ github.event.inputs.version }}
      
      – name: Initialize mandatory git config
      run: |
        git config user.name "${GITHUB_ACTOR}"
        git config user.email noreply@github.com

      – name: Update Changelog
        uses: thomaseizinger/keep-a-changelog-new-release@v1
        with:
          version: ${{ github.event.inputs.version }}
     
     – name: Commit changelog and manifest files
        id: make-commit
        run: |
          git add CHANGELOG.md
          git commit –message "Prepare release ${{ github.event.inputs.version }}"
          echo "::set-output name=commit::$(git rev-parse HEAD)"
      
      – name: Push new branch
        run: git push origin release/v${{ github.event.inputs.versionName }}
      
      – name: Create pull request to master
        uses: thomaseizinger/create-pull-request@1.0.0
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          head: release/v${{ github.event.inputs.version }}
          base: master
          title: v${{ github.event.inputs.version }} into master
          reviewers: ${{ github.event.issue.user.login }}
          body: |
              Hi!
              This PR was created in response workflow running.
              I've updated the version name and code commit: ${{ steps.make-commit.outputs.commit }}.
