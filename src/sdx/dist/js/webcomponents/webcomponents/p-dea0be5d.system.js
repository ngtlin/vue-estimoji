System.register([],(function(e){"use strict";return{execute:function(){e({c:s,g:c,m:l});function t(e){var t;var r=e.Symbol;if(typeof r==="function"){if(r.observable){t=r.observable}else{t=r("observable");r.observable=t}}else{t="@@observable"}return t}var r;if(typeof self!=="undefined"){r=self}else if(typeof window!=="undefined"){r=window}else if(typeof global!=="undefined"){r=global}else if(typeof module!=="undefined"){r=module}else{r=Function("return this")()}var n=t(r);var o=function e(){return Math.random().toString(36).substring(7).split("").join(".")};var i={INIT:"@@redux/INIT"+o(),REPLACE:"@@redux/REPLACE"+o(),PROBE_UNKNOWN_ACTION:function e(){return"@@redux/PROBE_UNKNOWN_ACTION"+o()}};function f(e){if(typeof e!=="object"||e===null)return false;var t=e;while(Object.getPrototypeOf(t)!==null){t=Object.getPrototypeOf(t)}return Object.getPrototypeOf(e)===t}function u(e,t,r){var o;if(typeof t==="function"&&typeof r==="function"||typeof r==="function"&&typeof arguments[3]==="function"){throw new Error("It looks like you are passing several store enhancers to "+"createStore(). This is not supported. Instead, compose them "+"together to a single function.")}if(typeof t==="function"&&typeof r==="undefined"){r=t;t=undefined}if(typeof r!=="undefined"){if(typeof r!=="function"){throw new Error("Expected the enhancer to be a function.")}return r(u)(e,t)}if(typeof e!=="function"){throw new Error("Expected the reducer to be a function.")}var a=e;var s=t;var c=[];var l=c;var d=false;function p(){if(l===c){l=c.slice()}}function b(){if(d){throw new Error("You may not call store.getState() while the reducer is executing. "+"The reducer has already received the state as an argument. "+"Pass it down from the top reducer instead of reading it from the store.")}return s}function h(e){if(typeof e!=="function"){throw new Error("Expected the listener to be a function.")}if(d){throw new Error("You may not call store.subscribe() while the reducer is executing. "+"If you would like to be notified after the store has been updated, subscribe from a "+"component and invoke store.getState() in the callback to access the latest state. "+"See https://redux.js.org/api-reference/store#subscribelistener for more details.")}var t=true;p();l.push(e);return function r(){if(!t){return}if(d){throw new Error("You may not unsubscribe from a store listener while the reducer is executing. "+"See https://redux.js.org/api-reference/store#subscribelistener for more details.")}t=false;p();var n=l.indexOf(e);l.splice(n,1);c=null}}function y(e){if(!f(e)){throw new Error("Actions must be plain objects. "+"Use custom middleware for async actions.")}if(typeof e.type==="undefined"){throw new Error('Actions may not have an undefined "type" property. '+"Have you misspelled a constant?")}if(d){throw new Error("Reducers may not dispatch actions.")}try{d=true;s=a(s,e)}finally{d=false}var t=c=l;for(var r=0;r<t.length;r++){var n=t[r];n()}return e}function v(e){if(typeof e!=="function"){throw new Error("Expected the nextReducer to be a function.")}a=e;y({type:i.REPLACE})}function w(){var e;var t=h;return e={subscribe:function e(r){if(typeof r!=="object"||r===null){throw new TypeError("Expected the observer to be an object.")}function n(){if(r.next){r.next(b())}}n();var o=t(n);return{unsubscribe:o}}},e[n]=function(){return this},e}y({type:i.INIT});return o={dispatch:y,subscribe:h,getState:b,replaceReducer:v},o[n]=w,o}var a="__store";function s(e,t,r){var n=e.el[a];if(!n){n=e.el[a]=u(t,r)}return n}function c(e){var t;var r=e.el;while(!t){var n=r.getRootNode&&r.getRootNode().host;r=r.parentElement||n;if(!r){break}if(r[a]){t=r[a];break}}return t}function l(e,t,r){if(!t){return function(){return undefined}}var n=function(){var n=t.getState();r.forEach((function(t){if(t in e&&t in n){e[t]=n[t]}}))};n();var o=t.subscribe(n);return o}}}}));